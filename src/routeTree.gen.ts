/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as PrivateRouteImport } from './routes/_private'
import { Route as PrivateIndexRouteImport } from './routes/_private/index'
import { Route as PrivateClockRouteImport } from './routes/_private/clock'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivateRoute = PrivateRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivateIndexRoute = PrivateIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PrivateRoute,
} as any)
const PrivateClockRoute = PrivateClockRouteImport.update({
  id: '/clock',
  path: '/clock',
  getParentRoute: () => PrivateRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/clock': typeof PrivateClockRoute
  '/': typeof PrivateIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/clock': typeof PrivateClockRoute
  '/': typeof PrivateIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_private': typeof PrivateRouteWithChildren
  '/login': typeof LoginRoute
  '/_private/clock': typeof PrivateClockRoute
  '/_private/': typeof PrivateIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/clock' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/clock' | '/'
  id: '__root__' | '/_private' | '/login' | '/_private/clock' | '/_private/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PrivateRoute: typeof PrivateRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_private/': {
      id: '/_private/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PrivateIndexRouteImport
      parentRoute: typeof PrivateRoute
    }
    '/_private/clock': {
      id: '/_private/clock'
      path: '/clock'
      fullPath: '/clock'
      preLoaderRoute: typeof PrivateClockRouteImport
      parentRoute: typeof PrivateRoute
    }
  }
}

interface PrivateRouteChildren {
  PrivateClockRoute: typeof PrivateClockRoute
  PrivateIndexRoute: typeof PrivateIndexRoute
}

const PrivateRouteChildren: PrivateRouteChildren = {
  PrivateClockRoute: PrivateClockRoute,
  PrivateIndexRoute: PrivateIndexRoute,
}

const PrivateRouteWithChildren =
  PrivateRoute._addFileChildren(PrivateRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  PrivateRoute: PrivateRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
